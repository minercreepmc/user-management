version: '3.9'

services:
  user-management:
    container_name: user-management
    restart: always
    build:
      dockerfile: Dockerfile
      context: .
      target: development
    volumes:
      - .:/usr/src/app
    depends_on:
      - postgres
      - rabbitmq
    links:
      - postgres
      - rabbitmq
    env_file:
      - .env
    command: npm run start:dev
    ports:
      - 3001:3000
    networks:
      - user-management
      - shared_network

  rabbitmq:
    container_name: user-message-broker
    image: rabbitmq:3-management-alpine
    hostname: rabbitmq
    volumes:
      - ./rabbitmq/messages:/var/lib/rabbitmq
    env_file:
      - .env
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - shared_network

  postgres:
    container_name: user-management-database
    image: postgres:15.1-alpine
    restart: always
    env_file:
      - .env
    volumes:
      - ./data/db:/var/lib/postgresql/data
    ports:
      - 8001:5432
    networks:
      - user-management

  adminer:
    container_name: user-management-adminer
    image: adminer
    restart: always
    ports:
      - '8901:8080'
    networks:
      - user-management

networks:
  shared_network:
    external: true
  user-management:
    driver: bridge
